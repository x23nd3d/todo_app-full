{"version":3,"sources":["services/todoService.js","pages/AuthPage.js","components/app-header/index.js","components/app-header/app-header.js","components/search-panel/index.js","components/search-panel/search-panel.js","components/todo-list-item/index.js","components/todo-list-item/todo-list-item.js","components/todo-list/index.js","components/todo-list/todo-list.js","components/item-status-filter/index.js","components/item-status-filter/item-status-filter.js","components/add-new-item/add-new-item.js","components/add-new-item/index.js","components/spinner/index.js","components/spinner/spinner.js","components/todo-app/index.js","components/todo-app/todo-app.js","pages/Dashboard.js","routes.js","components/login-panel/login-panel.js","components/login-panel/index.js","components/app/app.js","serviceWorker.js","index.js"],"names":["TodoService","_apiBase","url","data","fetch","this","method","body","JSON","stringify","headers","res","ok","Error","status","json","sessionStorage","getItem","content","getResource","results","map","_transformPerson","id","person","_transformPlanet","planet","_transformStarship","starship","item","match","_extractId","name","population","rotationPeriod","rotation_period","diameter","model","manufacturer","costInCredits","length","crew","passengers","cargoCapacity","gender","birthYear","eyeColor","AuthPage","state","loginPageActive","toggleLoginPage","localStorage","setState","connected","overlay","className","loginForm","connection","Fragment","Component","AppHeader","todo","done","statusInfo","SearchPanel","term","onChangeTerm","e","target","value","props","onSearch","type","placeholder","onChange","TodoListItem","label","onToggleDone","important","onToggleImportant","onRemove","clazz","onClick","TodoList","todos","toggleDone","toggleImportant","elements","_id","restData","key","ItemStatusFiler","updateFilter","filter","buttons","toast","require","AddNewItem","addItem","preventDefault","error","onAddItem","onSubmit","Spinner","TodoApp","todoService","todoData","getData","getItems","then","console","log","toggleProperty","array","prop","idx","findIndex","oldItem","newItem","slice","removeItem","search","toLowerCase","indexOf","updateTerm","createTodo","items","visibleItems","doneItems","todoItems","Dashboard","useRoutes","isAuthenticated","path","exact","to","toastr","LoginPanel","active","singIn","register","email","password","passwordRepeat","login","changeMode","setValue","obj","sendData","window","location","includes","warning","auth","authUser","text","success","setTimeout","reload","getValue","token","userId","undefined","setItem","btnInfo","values","states","href","SingUp","action","htmlFor","required","SignIn","routes","App","logOut","clear","checkRoute","checkIfConnected","setInterval","checkIfAuth","logout","LogOut","Boolean","hostname","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.33abc62e.chunk.js","sourcesContent":["export default class TodoService {\n\n    _apiBase = 'http://176.104.6.131:3000/api';\n\n    async authUser(url, data) {\n        const res = await fetch(`${this._apiBase}${url}`, {\n            method: 'POST',\n            body: JSON.stringify(data),\n            headers: {\n                'Content-Type': 'application/json'\n            }\n        });\n\n        if (!res.ok) {\n            throw new Error(`Could not fetch ${url}` +\n                `, received ${res.status}`)\n        }\n        return await res.json();\n    }\n\n    async checkIfAuth() {\n        const res = await fetch(`${this._apiBase}/auth/check`, {\n            method: 'POST',\n            headers: {\n                \"Authorization\": `${sessionStorage.getItem('API')}`\n            }\n        });\n    // TODO: error boundary\n        if (!res.ok) {\n            throw new Error(`Could not fetch ${sessionStorage.getItem('API')}` +\n                `, received ${res.status}`)\n        }\n        return await res.json();\n    }\n\n\n    async addItem(content) {\n        const res = await fetch(`${this._apiBase}/todo/add`, {\n            method: 'POST',\n            body: JSON.stringify(content),\n            headers: {\n                'Content-Type': 'application/json',\n                \"Authorization\": `${sessionStorage.getItem('API')}`\n            }\n        });\n\n        if (!res.ok) {\n            throw new Error(`Could not fetch ${this._apiBase}/todo/add` +\n                `, received ${res.status}`)\n        }\n        return await res.json();\n\n    }\n\n    async getItems() {\n        const res = await fetch(`${this._apiBase}/todo/show`, {\n            method: 'GET',\n            headers: {\n                \"Authorization\": `${sessionStorage.getItem('API')}`\n            }\n        });\n\n        if (!res.ok) {\n            throw new Error(`Could not fetch ${this._apiBase}/todo/add` +\n                `, received ${res.status}`)\n        }\n        return await res.json();\n\n    }\n\n    async getResource(url) {\n        const res = await fetch(`${this._apiBase}${url}`);\n\n        if (!res.ok) {\n            throw new Error(`Could not fetch ${url}` +\n                `, received ${res.status}`)\n        }\n        return await res.json();\n    }\n\n    async getAllPeople() {\n        const res = await this.getResource(`/people/`);\n        return res.results.map(this._transformPerson);\n    }\n\n    async getPerson(id) {\n        const person = await this.getResource(`/people/${id}/`);\n        return this._transformPerson(person);\n    }\n\n    async getAllPlanets() {\n        const res = await this.getResource(`/planets/`);\n        return res.results.map(this._transformPlanet);\n    }\n\n    async getPlanet(id) {\n        const planet = await this.getResource(`/planets/${id}/`);\n        return this._transformPlanet(planet);\n    }\n\n    async getAllStarships() {\n        const res = await this.getResource(`/starships/`);\n        return res.results.map(this._transformStarship);\n    }\n\n    async getStarship(id) {\n        const starship = this.getResource(`/starships/${id}/`);\n        return this._transformStarship(starship);\n    }\n\n    _extractId(item) {\n        const idRegExp = /\\/([0-9]*)\\/$/;\n        return item.url.match(idRegExp)[1];\n    }\n\n    _transformPlanet(planet) {\n        return {\n            id: this._extractId(planet),\n            name: planet.name,\n            population: planet.population,\n            rotationPeriod: planet.rotation_period,\n            diameter: planet.diameter\n        };\n    }\n\n    _transformStarship(starship) {\n        return {\n            id: this._extractId(starship),\n            name: starship.name,\n            model: starship.model,\n            manufacturer: starship.manufacturer,\n            costInCredits: starship.costInCredits,\n            length: starship.length,\n            crew: starship.crew,\n            passengers: starship.passengers,\n            cargoCapacity: starship.cargoCapacity\n        }\n    }\n\n    _transformPerson(person) {\n        return {\n            id: this._extractId(person),\n            name: person.name,\n            gender: person.gender,\n            birthYear: person.birthYear,\n            eyeColor: person.eyeColor\n        }\n    }\n}","import React, {Component} from \"react\";\nimport LoginPanel from \"../components/login-panel\";\n\nexport default class AuthPage extends Component{\n    constructor() {\n        super();\n\n        this.state = {\n            loginPageActive: true\n        }\n\n        this.toggleLoginPage = () => {\n            // TODO: add ajax check if you are logged in now.\n            if (localStorage.getItem('loginForm') === \"false\") {\n                this.setState(({loginPageActive, connected}) => {\n                    return {\n                        loginPageActive: !loginPageActive,\n                        connected: !connected\n                    }\n                })\n            }\n        }\n\n    }\n\n    componentDidMount() {\n        // TODO: use another method as this one was deprecated\n        // before the component was rendered\n        this.toggleLoginPage();\n\n    }\n\n\n    render() {\n\n        const { loginPageActive } = this.state;\n\n        const overlay = loginPageActive ? <div className=\"overlay\"></div> : null\n        const loginForm = loginPageActive ? <LoginPanel connection={this.toggleLoginPage}/> : null\n\n        return (\n            <React.Fragment>\n                {overlay}\n                {loginForm}\n            </React.Fragment>\n        )\n    }\n\n\n}\n\n","import AppHeader from './app-header'\nexport default AppHeader;","import React from \"react\";\n\nimport './app-header.css'\n\nconst AppHeader = ({todo, done}) => {\n\n    const statusInfo = <h2>{todo} more to do, {done} done</h2>;\n\n    return (\n        <div className=\"app-header d-flex\">\n            <h1>Todo List</h1>\n            {statusInfo}\n        </div>\n    )\n}\n\nexport default AppHeader;","import SearchPanel from './search-panel';\nexport default SearchPanel;","import React, {Component} from \"react\";\n\nimport './search-panel.css'\n\nexport default class SearchPanel extends Component {\n\n    state = {\n        term: ''\n    }\n\n\n    onChangeTerm = (e) => {\n        const term = e.target.value;\n        this.setState({term})\n\n        return this.props.onSearch(term);\n    }\n\n\n    render() {\n\n        const { term } = this.state;\n\n        return(\n                <input\n                    type=\"text\"\n                    className=\"form-control search-input\"\n                    placeholder=\"type to search\"\n                    onChange={this.onChangeTerm}\n                    value={term}/>\n        )\n    }\n\n\n}\n","import TodoListItem from './todo-list-item';\nexport default TodoListItem;","import React, {Component} from \"react\";\n\nimport './todo-list-item.css'\n\nexport default class TodoListItem extends Component {\n\n\n    render() {\n\n        const {\n            label,\n            onToggleDone,\n            done,\n            important,\n            onToggleImportant,\n            onRemove\n        } = this.props;\n\n        let clazz = 'todo-list-item';\n\n        if (done) {\n            clazz += ' done'\n        }\n\n        if (important) {\n            clazz += ' important'\n        }\n\n        return(\n            <span className={clazz}>\n                <span className=\"todo-list-item-label\"\n                       onClick={onToggleDone}>{label}</span>\n                <button type=\"button\"\n                        className=\"btn btn-outline-success btn-sm float-right\"\n                        onClick={onToggleImportant}>\n                    <i className=\"fa fa-exclamation\"></i>\n                </button>\n                <button type=\"button\"\n                        className=\"btn btn-outline-danger btn-sm float-right\"\n                        onClick={onRemove}>\n                    <i className=\"fa fa-trash-o\"></i>\n                </button>\n            </span>\n\n        )\n    }\n\n\n}\n","import TodoList from './todo-list';\nexport default TodoList;","import React from \"react\";\nimport TodoListItem from '../todo-list-item';\n\nimport './todo-list.css';\n\nconst TodoList = ({\n                      todos,\n                      toggleDone,\n                      toggleImportant,\n                      onRemove\n                    }) => {\n    const elements = todos.map(item => {\n       const { _id, ...restData } = item;\n\n        return (\n           <li key={_id} className=\"list-group-item\">\n               <TodoListItem\n                   {...restData}\n                    onToggleDone={() => toggleDone(_id)}\n                    onToggleImportant={() => toggleImportant(_id)}\n                    onRemove={() => onRemove(_id)}/>\n           </li>\n       )\n   })\n\n\n    return(\n        <ul className=\"list-group todo-list\">\n            {elements}\n        </ul>\n    )\n}\n\nexport default TodoList;","import ItemStatusFiler from './item-status-filter';\nexport default ItemStatusFiler;","import React, {Component} from \"react\";\n\nexport default class ItemStatusFilter extends Component {\n\n    render() {\n\n        const { updateFilter, filter } = this.props;\n\n        const btns = [\n            { state: 'all', label: 'All' },\n            { state: 'active', label: 'Active' },\n            { state: 'done', label: 'Done' },\n        ];\n\n        const buttons = btns.map(({state, label}) => {\n            const isActive = filter === state;\n            const clazz = isActive ? 'btn btn-info' : 'btn btn-outline-secondary'\n\n            return (\n                <button\n                    key={state}\n                    type=\"button\"\n                    className={clazz}\n                    onClick={() => updateFilter(state)}>{label}</button>\n            );\n        })\n\n        return(\n            <div className=\"btn-group\">\n                {buttons}\n            </div>\n        )\n    }\n\n\n}\n","import React, {Component} from \"react\";\n\nimport './add-new-item.css'\n\nconst toast = require('toastr');\n\nexport default class AddNewItem extends Component {\n\n    state = {\n        label: ''\n    }\n\n    getItem = (e) => {\n        const label = e.target.value;\n        this.setState({label})\n    }\n\n    addItem = (e) => {\n        e.preventDefault();\n\n        if (this.state.label.length === 0) {\n            toast.error('Please type your TODO first.')\n        } else {\n            this.props.onAddItem(this.state.label);\n            this.setState({label: ''});\n        }\n    }\n\n    render() {\n\n        const { label } = this.state;\n\n\n        return (\n            <form\n                className=\"add-new-item d-flex\"\n                onSubmit={this.addItem}>\n                <input\n                    type=\"text\"\n                    className=\"form-control inp\"\n                    placeholder=\"What needs to be done?\"\n                    value={label}\n                    onChange={this.getItem}/>\n                <button className=\"btn btn-outline-secondary\">Add Item</button>\n            </form>\n        )\n    }\n\n\n}\n","import AddNewItem from './add-new-item';\nexport default AddNewItem;","import Spinner from './spinner';\n\nexport default Spinner;\n","import React from 'react';\n\nimport './spinner.css';\n\nconst Spinner = () => {\n  return (\n    <div className=\"spinner\">\n        <div className=\"loadingio-spinner-eclipse-2qjsfm5p6un\">\n            <div className=\"ldio-uasgcxvbgn\">\n                <div></div>\n            </div>\n        </div>\n    </div>\n  );\n};\n\nexport default Spinner;\n","import TodoApp from \"./todo-app\";\nexport default TodoApp;","import React, {Component} from 'react';\n\nimport AppHeader from '../app-header';\nimport SearchPanel from '../search-panel';\nimport TodoList from '../todo-list';\nimport ItemStatusFiler from '../item-status-filter';\nimport AddNewItem from \"../add-new-item\";\nimport TodoService from \"../../services/todoService\";\nimport Spinner from \"../spinner\";\n\nimport './todo-app.css'\n\n// TODO: ADD REACT ROUTER, ADD METHODS WITH TODOS + ADD DATE OF ANY TODO AND MORE FEATURES\n\nexport default class TodoApp extends Component {\n    constructor() {\n        super();\n\n        const toastr = require('toastr');\n\n        this.todoService = new TodoService();\n\n        this.state = {\n            todoData: [],\n            term: '',\n            filter: 'all',\n        }\n\n\n        this.getData = () => {\n            this.todoService.getItems().then(body => {\n                const todoData = body.todos;\n                if (todoData) {\n                    this.setState({todoData});\n                } else {\n                    console.log(todoData, 'no TodoData')\n                }\n\n            })\n        }\n\n        this.toggleProperty = (array, id, prop) => {\n            const idx = array.findIndex(item => item._id === id);\n            const oldItem = array[idx];\n            const newItem = {\n                ...oldItem,\n                [prop]: !oldItem[prop]\n            };\n\n            return [\n                ...array.slice(0, idx),\n                newItem,\n                ...array.slice(idx + 1)\n            ]\n        };\n\n        this.onToggleDone = (id) => {\n            this.setState(({todoData}) => {\n                return {\n                    todoData: this.toggleProperty(todoData, id, 'done')\n                }\n            });\n        };\n\n        this.onToggleImportant = (id) => {\n            this.setState(({todoData}) => {\n                return {\n                    todoData: this.toggleProperty(todoData, id, 'important')\n                }\n            });\n        };\n\n        this.removeItem = (id) => {\n            this.setState(({todoData}) => {\n                const idx = todoData.findIndex(item => item.id === id);\n                const newItem = [\n                    ...todoData.slice(0, idx),\n                    ...todoData.slice(idx + 1)\n                ];\n\n                return {\n                    todoData: newItem\n                }\n            });\n        };\n\n        this.search = (term, array) => {\n\n            if (!term) {\n                return array\n            }\n\n            return array.filter(item => {\n                return item.label.toLowerCase().indexOf(term.toLowerCase()) > -1\n            });\n        };\n\n        this.updateTerm = (term) => {\n            this.setState({term})\n        };\n\n        this.addItem = (label) => {\n            const newItem = this.createTodo(label);\n                this.todoService.addItem(newItem).then(body => {\n                // TODO: check why multiple items added + correct state, state todoData should get all items every time\n                    const todoData = body.todos;\n                    this.setState({todoData});\n                    //\n                    // const newItems = [\n                    //     ...todoData,\n                    //     newItem\n                    // ];\n                    //\n                    // return {\n                    //     todoData: newItems\n                    // }\n\n                })\n\n\n            // this.setState(({todoData}) => {\n            // });\n        };\n\n        this.filter = (state, items) => {\n            switch (state) {\n                case 'all':\n                    return items;\n                case 'active':\n                    return items.filter(item => !item.done);\n                case 'done':\n                    return items.filter(item => item.done);\n                default:\n                    return items;\n            }\n\n        };\n\n        this.updateFilter = (filter) => {\n            this.setState({filter})\n        };\n\n\n    }\n\n\n\n    createTodo(label) {\n        return {\n            label,\n            done: false,\n            important: false,\n        }\n    }\n\n    componentWillMount() {\n        // TODO: use another method as this one was deprecated\n        // before the component was rendered\n        this.getData()\n\n    }\n\n    render() {\n\n        const { todoData, term, filter } = this.state;\n        const visibleItems = this.filter(filter, this.search(term, todoData));\n\n        const doneItems = todoData.filter(item => item.done).length;\n        const todoItems = todoData.length - doneItems;\n\n        const hasData = todoData.length > 0 ? true : null;\n        const todos =  hasData ? <TodoList todos={visibleItems} toggleDone={this.onToggleDone} toggleImportant={this.onToggleImportant} onRemove={this.removeItem}/> : <Spinner/>;\n\n        return (\n            <div className=\"todo-app\">\n                {/*<LogOut status={this.logOut}/>*/}\n                <AppHeader todo={todoItems} done={doneItems}/>\n                <div className=\"top-panel d-flex\">\n                <SearchPanel onSearch={this.updateTerm}/>\n                <ItemStatusFiler\n                    updateFilter={this.updateFilter}\n                    filter={filter}/>\n                </div>\n                {todos}\n                <AddNewItem onAddItem={this.addItem}/>\n            </div>\n        )\n    }\n\n\n};\n\n","import React from \"react\";\nimport TodoApp from \"../components/todo-app\";\n\nexport const Dashboard = () => {\n    return (\n        <TodoApp/>\n    )\n}\n\n","import React from \"react\";\nimport {Switch, Route, Redirect} from 'react-router-dom'\nimport AuthPage from \"./pages/AuthPage\";\nimport {Dashboard} from \"./pages/Dashboard\";\n\nexport const useRoutes = isAuthenticated => {\n\n    if (isAuthenticated) {\n        console.log('WORKING!!!')\n        return (\n           <Switch>\n               <Route path=\"/dashboard\" exact>\n                   <Dashboard/>\n               </Route>\n               <Redirect to=\"/dashboard\"/>\n           </Switch>\n\n        )\n    }\n\n    return (\n        <Switch>\n            <Route path=\"/auth\" exact>\n              <AuthPage/>\n            </Route>\n            <Redirect to=\"/auth\"/>\n        </Switch>\n    )\n}","import React, {Component} from \"react\";\nimport '../../../node_modules/animate.css/animate.css';\nimport '../../services/todoService';\n\nimport './login-panel.css'\nimport TodoService from \"../../services/todoService\";\nimport {useRoutes} from \"../../routes\";\nconst toastr = require('toastr');\n\nexport default class LoginPanel extends Component {\n\n    todoService = new TodoService();\n\n    state = {\n        active: true,\n        singIn: false,\n        register: {\n            name: \"\",\n            email: \"\",\n            password: \"\",\n            passwordRepeat: \"\"\n        },\n        login: {\n            email: \"\",\n            password: \"\"\n        }\n    }\n\n        // activateModal = () => {\n        //     this.setState(({active}) => {\n        //         return {\n        //             active: !active\n        //         }\n        //     })\n        //\n        //\n        //\n        //     div.addEventListener('click', e => {\n        //         e.preventDefault();\n        //         document.querySelector('.signup__container').classList.add('animate__animated')\n        //         document.querySelector('.signup__container').classList.add('animate__backOutUp')\n        //         setTimeout(() => {\n        //             this.setState({active: false})\n        //             div.remove();\n        //         }, 800)\n        //\n        //\n        //\n        //     })\n        // }\n\n        changeMode = () => {\n            this.setState(({singIn}) => {\n                return {\n                    singIn: !singIn\n                }\n            })\n        }\n\n        setValue = (e) => {\n\n            const value = e.target.value;\n            // TODO correct UNDEFINED AND MAKE AS 1 FUNCTION\n\n            const obj = {\n                ...this.state.register,\n                [e.target.name]: value,\n                [e.target.name]: value,\n                [e.target.name]: value,\n                [e.target.name]: value\n            }\n\n            this.setState(({register}) => ({\n                register: obj\n            }))\n\n        }\n\n        sendData = (e) => {\n            e.preventDefault();\n            window.location = '/#submit'\n\n            const { password, passwordRepeat, email } = this.state.register;\n\n            const areSame = password === passwordRepeat;\n\n            if (areSame) {\n                if (!email.includes('@') || !email.includes('.')) {\n                    return toastr.warning('Please type the proper email address.')\n                }  else {\n                const auth = this.todoService.authUser('/auth/signup', this.state.register).then(body => {\n                    const {status, text} = body;\n\n                    if (status === \"failure\" && text === \"registered:true\") {\n                        // TODO set localstorage or smth to prevent further actions with the system\n                        return toastr.warning('Such email is already registered, please Log in to your account.');\n                    }  else {\n                        toastr.success('User has been registered. Please Log in to your account.')\n                        window.location = '/auth'\n                        console.log(body);\n                        setTimeout(() => {\n                            window.location.reload();\n                        }, 2000)\n                    }\n                })\n                    console.log(auth);\n                }\n\n            } else {\n                return toastr.error('Passwords should be the same.')\n            }\n\n        }\n\n\n    getValue = (e) => {\n        const value = e.target.value;\n\n        // TODO correct UNDEFINED AND MAKE AS 1 FUNCTION\n        const obj = {\n            ...this.state.login,\n            [e.target.name]: value,\n            [e.target.name]: value,\n        }\n\n        this.setState(({login}) => ({\n            login: obj\n        }))\n\n}\n\n\n\n        getData = (e) => {\n            e.preventDefault();\n            // window.location = '/#attempt'\n            const { email } = this.state.login;\n\n            if (!email.includes('@') || !email.includes('.')) {\n                return toastr.warning('Please type the proper email address.')\n            } else {\n                const auth = this.todoService.authUser('/auth/login', this.state.login).then(body => {\n                    const { status, text } = body;\n\n                    if (status === \"failure\" || text === \"notfound\") {\n                        return toastr.warning('Such user does not exist. Please try again.')\n                    } else {\n\n                        const { status, token, userId: { email, name, todo } } = body;\n                        const { connection } = this.props;\n\n                        if (status === \"Success\" && token !== undefined) {\n                            toastr.success(`Welcome on board, ${name}`);\n                            setTimeout(() => {\n                                sessionStorage.setItem('API', token);\n                                const isAuthenticated = !!token;\n                                useRoutes(isAuthenticated);\n                                // TODO for now saved state login form in localstorage\n                                localStorage.setItem('loginForm', \"false\");\n                                connection();\n                                window.location = '/dashboard'\n                            }, 800)\n\n\n                            // TODO add info to cookies or sessionStorage or somewhere to save this info\n                        }\n\n\n\n                        console.log(body)\n                    }\n\n                })\n                console.log(auth);\n            }\n\n\n        }\n\n\nrender() {\n\n        const { singIn, register, login } = this.state;\n\n        let content;\n        let btnInfo;\n\n\n        if (singIn) {\n            btnInfo = \"I have an account\"\n            content = <SingUp values={this.setValue} states={register} data={this.sendData} />\n        } else {\n            btnInfo = \"I would like to be a member\"\n            content = <SignIn values={this.getValue} states={login} data={this.getData}/>\n        }\n\n    return(\n    <React.Fragment>\n        <div className=\"signup__container animate__animated animate__backInDown\">\n            <div className=\"container__child signup__thumbnail\">\n                <div className=\"thumbnail__logo\">\n                    <h1 className=\"logo__text\">Todo List</h1>\n                </div>\n                <div className=\"thumbnail__content center\">\n                    <h1 className=\"heading--primary\">Welcome to the application.</h1>\n                    <h4 className=\"heading--secondary\">Are you ready to create your first todo?</h4>\n                </div>\n                <ul className=\"list-inline\">\n                    <li>\n                        <a id=\"go\" href=\"#\" className=\"btn signup__link\" onClick={this.changeMode}>{btnInfo}</a>\n                    </li>\n                </ul>\n                <div className=\"signup__overlay-2\"></div>\n            </div>\n            <div className=\"container__child signup__form\">\n                {content}\n            </div>\n        </div>\n    </React.Fragment>\n        )\n\n        }\n\n\n}\n\nconst SingUp = ({values, states, data}) => {\n    const { name, email, password, passwordRepeat } = states;\n\n    return(\n        <React.Fragment>\n            <form action='#' onSubmit={ data }>\n                <div className=\"form-group\">\n                    <label htmlFor=\"username\">Username</label>\n                    <input className=\"form-control\" type=\"text\" name=\"name\" value={name} onChange={ values } id=\"name\" placeholder=\"Your name\" required />\n                </div>\n                <div className=\"form-group\">\n                    <label htmlFor=\"email\">Email</label>\n                    <input className=\"form-control\" type=\"text\" name=\"email\" value={email} onChange={ values } id=\"email\" placeholder=\"Your email\" required />\n                </div>\n                <div className=\"form-group\">\n                    <label htmlFor=\"password\">Password</label>\n                    <input className=\"form-control\" type=\"password\" name=\"password\" value={password} onChange={ values } id=\"password\" placeholder=\"********\" required />\n                </div>\n                <div className=\"form-group\">\n                    <label htmlFor=\"passwordRepeat\">Repeat Password</label>\n                    <input className=\"form-control\" type=\"password\" name=\"passwordRepeat\" value={passwordRepeat} onChange={ values } id=\"passwordRepeat\" placeholder=\"********\" required />\n                </div>\n                <div className=\"m-t-lg\">\n                    <ul className=\"list-inline\">\n                        <li>\n                            <input className=\"btn btn--form\" type=\"submit\" value=\"Register\" />\n                        </li>\n                    </ul>\n                </div>\n            </form>\n        </React.Fragment>\n    )\n}\n\n\nconst SignIn = ({ values, states, data }) => {\n    const { email, password } = states;\n    return(\n        <React.Fragment>\n                <form action=\"#\" onSubmit={ data } className=\"signInForm\">\n                    <div className=\"form-group\">\n                        <label htmlFor=\"email\">Email</label>\n                        <input className=\"form-control\" type=\"text\" name=\"email\" value={email} onChange={ values } id=\"email\" placeholder=\"Your email\" required />\n                    </div>\n                    <div className=\"form-group\">\n                        <label htmlFor=\"password\">Password</label>\n                        <input className=\"form-control\" type=\"password\" name=\"password\" value={password} onChange={ values } id=\"password\" placeholder=\"********\" required />\n                    </div>\n                    <div className=\"m-t-lg\">\n                        <ul className=\"list-inline\">\n                            <li>\n                                <input className=\"btn btn--form\" type=\"submit\" value=\"Sign in\" />\n                            </li>\n                        </ul>\n                    </div>\n                </form>\n        </React.Fragment> )\n}\n\n\n\n","import LoginPanel from './login-panel';\nexport default LoginPanel;","import React, {Component} from 'react';\nimport { BrowserRouter as Router } from 'react-router-dom'\nimport LoginPanel from \"../login-panel\";\nimport TodoService from \"../../services/todoService\";\n\nimport './app.css'\nimport {useRoutes} from \"../../routes\";\n\nconst token = sessionStorage.getItem('API');\nconst isAuthenticated = !!token;\nconst routes = useRoutes(isAuthenticated);\n\n// TODO: ADD REACT ROUTER, ADD METHODS WITH TODOS + ADD DATE OF ANY TODO AND MORE FEATURES\n\nexport default class App extends Component {\n    constructor() {\n        super();\n\n        const toastr = require('toastr');\n\n\n        this.todoService = new TodoService();\n\n        this.state = {\n            loginPageActive: true,\n            connected: false\n        }\n\n        this.toggleLoginPage = () => {\n            // TODO: add ajax check if you are logged in now.\n            if (localStorage.getItem('loginForm') === \"false\") {\n                this.setState(({loginPageActive, connected}) => {\n                    return {\n                        loginPageActive: !loginPageActive,\n                        connected: !connected\n                    }\n                })\n            }\n        }\n\n\n        this.logOut = () => {\n            sessionStorage.clear();\n            localStorage.clear();\n            this.setState(({loginPageActive}) => {\n                return {\n                    loginPageActive: !loginPageActive\n                }\n            });\n            window.location = '/auth'\n        };\n\n        this.checkRoute = () => {\n            if (this.state.loginPageActive === true ) {\n                console.log(this.state.loginPageActive, 'STATE');\n                window.location = '/auth'\n            } else {\n                // TODO: then will add routes\n                window.location = '/dashboard'\n            }\n        }\n\n        this.checkIfConnected = () => {\n            setInterval(() => {\n                this.todoService.checkIfAuth().then(body => {\n                  const { status } = body;\n\n                    if (status === \"connected\") {\n                      this.setState({connected: true});\n                  } else {\n                        this.setState({connected: false});\n                  }\n                })\n            }, 3000)\n        }\n    }\n\n\n    componentDidMount() {\n        // after rendering\n        // this.checkRoute();\n        // this.checkIfConnected();\n        this.toggleLoginPage();\n    }\n\n    render() {\n\n        const { loginPageActive, connected } = this.state;\n\n\n        const logout = loginPageActive ? null : <LogOut status={this.logOut}/>\n\n\n\n\n        return (\n            <Router>\n                <div className=\"todo-app\">\n                    {logout}\n                    {routes}\n                </div>\n            </Router>\n\n        )\n    }\n\n\n};\n\n\nconst LogOut = ({ status }) => {\n    return (\n        <form action=\"#\" onSubmit={ status }>\n            <button className=\"btn btn-secondary logout\">Log out</button>\n        </form>\n    )\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from \"./components/app/app\";\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}